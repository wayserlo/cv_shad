import numpy as np
from common import assert_ndarray_equal
from seam_carve import compute_seam_matrix


def test_seam_matrix_1v():
    a = np.array(
        [
            [3, 4, 0, 0, 9, 2, 8],
            [7, 6, 4, 6, 3, 1, 4],
            [7, 1, 5, 2, 5, 2, 0],
            [8, 1, 8, 1, 5, 2, 4],
        ]
    ).astype(np.float64)
    gt_v = np.array(
        [
            [3, 7, 7, 7, 16, 12, 19],
            [7, 9, 11, 13, 10, 11, 15],
            [7, 8, 13, 13, 18, 12, 11],
            [8, 8, 16, 14, 18, 20, 16],
        ]
    ).astype(np.float64)
    assert_ndarray_equal(actual=compute_seam_matrix(a, mode="vertical"), correct=gt_v)


def test_seam_matrix_1h():
    a = np.array(
        [
            [3, 4, 0, 0, 9, 2, 8],
            [7, 6, 4, 6, 3, 1, 4],
            [7, 1, 5, 2, 5, 2, 0],
            [8, 1, 8, 1, 5, 2, 4],
        ]
    ).astype(np.float64)
    gt_h = np.array(
        [
            [3, 4, 0, 0, 9, 2, 8],
            [10, 6, 4, 6, 3, 3, 6],
            [13, 5, 9, 5, 8, 5, 3],
            [13, 6, 13, 6, 10, 5, 7],
        ]
    ).astype(np.float64)
    assert_ndarray_equal(actual=compute_seam_matrix(a, mode="horizontal"), correct=gt_h)


def test_seam_matrix_2v():
    a = np.array(
        [
            [8, 3, 8, 6, 2, 5, 4, 4, 2, 5],
            [3, 1, 4, 9, 6, 0, 3, 8, 8, 5],
            [7, 7, 7, 7, 0, 6, 0, 4, 7, 6],
            [0, 9, 6, 2, 2, 8, 3, 3, 3, 9],
            [8, 4, 2, 0, 9, 8, 6, 8, 9, 6],
            [2, 5, 8, 6, 6, 3, 3, 5, 7, 2],
            [9, 9, 4, 8, 9, 3, 6, 6, 6, 8],
            [8, 8, 9, 6, 0, 2, 3, 6, 7, 2],
            [0, 9, 5, 6, 1, 8, 5, 8, 7, 2],
            [5, 2, 4, 0, 1, 8, 1, 7, 8, 5],
        ]
    ).astype(np.float64)
    gt_v = np.array(
        [
            [8, 6, 12, 14, 16, 21, 12, 15, 17, 22],
            [3, 4, 8, 17, 20, 8, 11, 16, 20, 22],
            [7, 7, 11, 15, 8, 14, 8, 12, 18, 20],
            [0, 9, 10, 8, 8, 16, 17, 11, 14, 23],
            [8, 4, 6, 6, 15, 16, 21, 25, 20, 20],
            [2, 7, 12, 12, 12, 15, 18, 20, 25, 22],
            [9, 11, 11, 19, 21, 15, 15, 18, 24, 32],
            [8, 8, 17, 13, 12, 9, 12, 18, 25, 26],
            [0, 9, 7, 12, 7, 15, 14, 20, 25, 27],
            [5, 2, 6, 6, 7, 15, 16, 21, 28, 30],
        ]
    ).astype(np.float64)
    assert_ndarray_equal(actual=compute_seam_matrix(a, mode="vertical"), correct=gt_v)


def test_seam_matrix_2h():
    a = np.array(
        [
            [8, 3, 8, 6, 2, 5, 4, 4, 2, 5],
            [3, 1, 4, 9, 6, 0, 3, 8, 8, 5],
            [7, 7, 7, 7, 0, 6, 0, 4, 7, 6],
            [0, 9, 6, 2, 2, 8, 3, 3, 3, 9],
            [8, 4, 2, 0, 9, 8, 6, 8, 9, 6],
            [2, 5, 8, 6, 6, 3, 3, 5, 7, 2],
            [9, 9, 4, 8, 9, 3, 6, 6, 6, 8],
            [8, 8, 9, 6, 0, 2, 3, 6, 7, 2],
            [0, 9, 5, 6, 1, 8, 5, 8, 7, 2],
            [5, 2, 4, 0, 1, 8, 1, 7, 8, 5],
        ]
    ).astype(np.float64)
    gt_h = np.array(
        [
            [8, 3, 8, 6, 2, 5, 4, 4, 2, 5],
            [6, 4, 7, 11, 8, 2, 7, 10, 10, 7],
            [11, 11, 11, 14, 2, 8, 2, 11, 14, 13],
            [11, 20, 17, 4, 4, 10, 5, 5, 14, 22],
            [19, 15, 6, 4, 13, 12, 11, 13, 14, 20],
            [17, 11, 12, 10, 10, 14, 14, 16, 20, 16],
            [20, 20, 14, 18, 19, 13, 20, 20, 22, 24],
            [28, 22, 23, 20, 13, 15, 16, 26, 27, 24],
            [22, 31, 25, 19, 14, 21, 20, 24, 31, 26],
            [27, 24, 23, 14, 15, 22, 21, 27, 32, 31],
        ]
    ).astype(np.float64)
    assert_ndarray_equal(actual=compute_seam_matrix(a, mode="horizontal"), correct=gt_h)
